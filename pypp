#!/bin/env python3

# Грамматика для @ifdef, @ifndef:
# S -> line S
# S -> @if D S
# S -> /-
# D -> @endif
# D -> line D
# D -> @ifdef D D
# D -> @ifndef D D
# D -> @else E
# E -> line E
# E -> @endif
# E -> @ifdef D E

import sys
import re


include_directive = re.compile("^\s*@include\s<(.+)>\s*$")
define_directive = re.compile("^\s*@define\s([^\s]+)(.*)$")
undef_directive = re.compile("^\s*@undef\s([^\s]+)\s*$")
ifdef_directive = re.compile("^\s*@ifdef\s([^\s]+)\s*$")
ifundef_directive = re.compile("^\s*@ifundef\s([^\s]+)\s*$")
end_directive = re.compile("^\s*@end\s*$")


for line in sys.stdin:
    match_line = include_directive.match(line)
    if match_line:
        print(f"!{match_line.group(1)}!", end='', file=sys.stdout)
    print(f">>>{line}<<<", end='', file=sys.stdout)


# S - правило вывода.
def pypp_flat():
    pass


# D - правило вывода.
def pypp_condition():
    pass


# E - правило вывода.
def pypp_else():
    pass
